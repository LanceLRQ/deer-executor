name: Go

on:
  push:
    tags:
      - 'v*'
#    branches: [ v2 ]
#  pull_request:
#    branches: [ v2 ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Check out deer-common
      uses: actions/checkout@v2
      with:
        path: ./pkg/deer-common
        repository: LanceLRQ/deer-common

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build (linux_amd64)
      run: |
        go mod tidy
        GOOS=linux GOARCH=amd64 go build -v .

    - name: Pack (linux_amd64)
      run: |
        zip -r deer-executor_${{ github.ref }}_linux_amd64.zip deer-executor lib CHANGELOG COMMANDS.md README.md LICENSE data

    - name: Build (darwin_amd64)
      run: |
        GOOS=darwin GOARCH=amd64 go build -v .

    - name: Pack (darwin_amd64)
      run: |
        zip -r deer-executor_${{ github.ref }}_darwin_amd64.zip deer-executor lib CHANGELOG COMMANDS.md README.md LICENSE data

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./deer-executor_${{ github.ref }}_linux_amd64.zip
        asset_name: deer-executor_${{ github.ref }}_linux_amd64.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (Drawin)
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./deer-executor_${{ github.ref }}_darwin_amd64.zip
        asset_name: deer-executor_${{ github.ref }}_darwin_amd64.zip
        asset_content_type: application/zip
#     - name: Test
#       run: go test -v .
