// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.11.2
// source: protos/judge.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JudgeLogLevel int32

const (
	JudgeLogLevel_UNSET JudgeLogLevel = 0
	JudgeLogLevel_DEBUG JudgeLogLevel = 1
	JudgeLogLevel_INFO  JudgeLogLevel = 2
	JudgeLogLevel_WARN  JudgeLogLevel = 3
	JudgeLogLevel_ERROR JudgeLogLevel = 4
)

// Enum value maps for JudgeLogLevel.
var (
	JudgeLogLevel_name = map[int32]string{
		0: "UNSET",
		1: "DEBUG",
		2: "INFO",
		3: "WARN",
		4: "ERROR",
	}
	JudgeLogLevel_value = map[string]int32{
		"UNSET": 0,
		"DEBUG": 1,
		"INFO":  2,
		"WARN":  3,
		"ERROR": 4,
	}
)

func (x JudgeLogLevel) Enum() *JudgeLogLevel {
	p := new(JudgeLogLevel)
	*p = x
	return p
}

func (x JudgeLogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JudgeLogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_judge_proto_enumTypes[0].Descriptor()
}

func (JudgeLogLevel) Type() protoreflect.EnumType {
	return &file_protos_judge_proto_enumTypes[0]
}

func (x JudgeLogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JudgeLogLevel.Descriptor instead.
func (JudgeLogLevel) EnumDescriptor() ([]byte, []int) {
	return file_protos_judge_proto_rawDescGZIP(), []int{0}
}

type CompressType int32

const (
	CompressType_NO_COMPRESS CompressType = 0 // 不压缩
	CompressType_GZIP        CompressType = 1 // GZ压缩
)

// Enum value maps for CompressType.
var (
	CompressType_name = map[int32]string{
		0: "NO_COMPRESS",
		1: "GZIP",
	}
	CompressType_value = map[string]int32{
		"NO_COMPRESS": 0,
		"GZIP":        1,
	}
)

func (x CompressType) Enum() *CompressType {
	p := new(CompressType)
	*p = x
	return p
}

func (x CompressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_judge_proto_enumTypes[1].Descriptor()
}

func (CompressType) Type() protoreflect.EnumType {
	return &file_protos_judge_proto_enumTypes[1]
}

func (x CompressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressType.Descriptor instead.
func (CompressType) EnumDescriptor() ([]byte, []int) {
	return file_protos_judge_proto_rawDescGZIP(), []int{1}
}

type JudgeFlag int32

const (
	// Accepted
	JudgeFlag_AC JudgeFlag = 0
	// Presentation Error
	JudgeFlag_PE JudgeFlag = 1
	// Time Limit Exceeded
	JudgeFlag_TLE JudgeFlag = 2
	// Memory Limit Exceeded
	JudgeFlag_MLE JudgeFlag = 3
	// Wrong Answer
	JudgeFlag_WA JudgeFlag = 4
	// ntime Error
	JudgeFlag_RE JudgeFlag = 5
	// Output Limit Exceeded
	JudgeFlag_OLE JudgeFlag = 6
	// Compile Error
	JudgeFlag_CE JudgeFlag = 7
	// System Error
	JudgeFlag_SE JudgeFlag = 8
	// 9 is for ReJudge (reserved)
	JudgeFlag_ReJudge JudgeFlag = 9
	// Special Judge Checker Time OUT
	JudgeFlag_SpecialJudgeTimeout JudgeFlag = 10
	// Special Judge Checker ERROR
	JudgeFlag_SpecialJudgeError JudgeFlag = 11
	// Special Judge Checker Finish, Need Standard Checkup
	JudgeFlag_SpecialJudgeRequireChecker JudgeFlag = 12
)

// Enum value maps for JudgeFlag.
var (
	JudgeFlag_name = map[int32]string{
		0:  "AC",
		1:  "PE",
		2:  "TLE",
		3:  "MLE",
		4:  "WA",
		5:  "RE",
		6:  "OLE",
		7:  "CE",
		8:  "SE",
		9:  "ReJudge",
		10: "SpecialJudgeTimeout",
		11: "SpecialJudgeError",
		12: "SpecialJudgeRequireChecker",
	}
	JudgeFlag_value = map[string]int32{
		"AC":                         0,
		"PE":                         1,
		"TLE":                        2,
		"MLE":                        3,
		"WA":                         4,
		"RE":                         5,
		"OLE":                        6,
		"CE":                         7,
		"SE":                         8,
		"ReJudge":                    9,
		"SpecialJudgeTimeout":        10,
		"SpecialJudgeError":          11,
		"SpecialJudgeRequireChecker": 12,
	}
)

func (x JudgeFlag) Enum() *JudgeFlag {
	p := new(JudgeFlag)
	*p = x
	return p
}

func (x JudgeFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JudgeFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_judge_proto_enumTypes[2].Descriptor()
}

func (JudgeFlag) Type() protoreflect.EnumType {
	return &file_protos_judge_proto_enumTypes[2]
}

func (x JudgeFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JudgeFlag.Descriptor instead.
func (JudgeFlag) EnumDescriptor() ([]byte, []int) {
	return file_protos_judge_proto_rawDescGZIP(), []int{2}
}

type JudgementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              string        `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                                             // 代码(具体内容)
	ProblemDir        string        `protobuf:"bytes,2,opt,name=problem_dir,json=problemDir,proto3" json:"problem_dir,omitempty"`                               // 题目数据(基于%agent_config.JudgementConfig.ProblemRoot%的目录路径)
	Language          string        `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`                                                     // 评测语言标识
	EnableLog         bool          `protobuf:"varint,4,opt,name=enable_log,json=enableLog,proto3" json:"enable_log,omitempty"`                                 // 启用评测日志
	LogLevel          JudgeLogLevel `protobuf:"varint,5,opt,name=log_level,json=logLevel,proto3,enum=rpc.JudgeLogLevel" json:"log_level,omitempty"`             // 评测日志等级
	CleanSession      bool          `protobuf:"varint,6,opt,name=clean_session,json=cleanSession,proto3" json:"clean_session,omitempty"`                        // 评测结束后是否清除会话
	PersistResult     bool          `protobuf:"varint,10,opt,name=persist_result,json=persistResult,proto3" json:"persist_result,omitempty"`                    // 保存评测记录
	PersistWithAcData bool          `protobuf:"varint,11,opt,name=persist_with_ac_data,json=persistWithAcData,proto3" json:"persist_with_ac_data,omitempty"`    // 评测记录包含AC数据（会增加体积）
	CompressType      CompressType  `protobuf:"varint,12,opt,name=compress_type,json=compressType,proto3,enum=rpc.CompressType" json:"compress_type,omitempty"` // 记录压缩方式
	SignResult        bool          `protobuf:"varint,13,opt,name=sign_result,json=signResult,proto3" json:"sign_result,omitempty"`                             // 对评测记录进行GPG签名
	GpgKey            string        `protobuf:"bytes,14,opt,name=gpg_key,json=gpgKey,proto3" json:"gpg_key,omitempty"`                                          // Base64编码后的GPG私钥
	GpgPassphrase     string        `protobuf:"bytes,15,opt,name=gpg_passphrase,json=gpgPassphrase,proto3" json:"gpg_passphrase,omitempty"`                     // GPG私钥的密码
}

func (x *JudgementRequest) Reset() {
	*x = JudgementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_judge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgementRequest) ProtoMessage() {}

func (x *JudgementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_judge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgementRequest.ProtoReflect.Descriptor instead.
func (*JudgementRequest) Descriptor() ([]byte, []int) {
	return file_protos_judge_proto_rawDescGZIP(), []int{0}
}

func (x *JudgementRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *JudgementRequest) GetProblemDir() string {
	if x != nil {
		return x.ProblemDir
	}
	return ""
}

func (x *JudgementRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *JudgementRequest) GetEnableLog() bool {
	if x != nil {
		return x.EnableLog
	}
	return false
}

func (x *JudgementRequest) GetLogLevel() JudgeLogLevel {
	if x != nil {
		return x.LogLevel
	}
	return JudgeLogLevel_UNSET
}

func (x *JudgementRequest) GetCleanSession() bool {
	if x != nil {
		return x.CleanSession
	}
	return false
}

func (x *JudgementRequest) GetPersistResult() bool {
	if x != nil {
		return x.PersistResult
	}
	return false
}

func (x *JudgementRequest) GetPersistWithAcData() bool {
	if x != nil {
		return x.PersistWithAcData
	}
	return false
}

func (x *JudgementRequest) GetCompressType() CompressType {
	if x != nil {
		return x.CompressType
	}
	return CompressType_NO_COMPRESS
}

func (x *JudgementRequest) GetSignResult() bool {
	if x != nil {
		return x.SignResult
	}
	return false
}

func (x *JudgementRequest) GetGpgKey() string {
	if x != nil {
		return x.GpgKey
	}
	return ""
}

func (x *JudgementRequest) GetGpgPassphrase() string {
	if x != nil {
		return x.GpgPassphrase
	}
	return ""
}

type JudgementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeFlag         JudgeFlag `protobuf:"varint,1,opt,name=JudgeFlag,proto3,enum=rpc.JudgeFlag" json:"JudgeFlag,omitempty"` // 评测结果状态
	ResultData        string    `protobuf:"bytes,2,opt,name=ResultData,proto3" json:"ResultData,omitempty"`                   // 评测结果数据(JSON格式序列化成文本，结构为commonStructs.JudgeResult)
	ResultPackageFile string    `protobuf:"bytes,3,opt,name=ResultPackageFile,proto3" json:"ResultPackageFile,omitempty"`     // 评测运行数据打包文件(外部根据ID访问/%agent_config.JudgementConfig.SessionRoot%/%ResultPackageFile%)
	SessionId         string    `protobuf:"bytes,4,opt,name=SessionId,proto3" json:"SessionId,omitempty"`                     // 评测Session的ID(外部根据ID访问/%server_config.JudgementConfig.SessionRoot%/%SessionID%)
}

func (x *JudgementResponse) Reset() {
	*x = JudgementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_judge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgementResponse) ProtoMessage() {}

func (x *JudgementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_judge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgementResponse.ProtoReflect.Descriptor instead.
func (*JudgementResponse) Descriptor() ([]byte, []int) {
	return file_protos_judge_proto_rawDescGZIP(), []int{1}
}

func (x *JudgementResponse) GetJudgeFlag() JudgeFlag {
	if x != nil {
		return x.JudgeFlag
	}
	return JudgeFlag_AC
}

func (x *JudgementResponse) GetResultData() string {
	if x != nil {
		return x.ResultData
	}
	return ""
}

func (x *JudgementResponse) GetResultPackageFile() string {
	if x != nil {
		return x.ResultPackageFile
	}
	return ""
}

func (x *JudgementResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_judge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_judge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_protos_judge_proto_rawDescGZIP(), []int{2}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool  `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	Time  int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_judge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_judge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_protos_judge_proto_rawDescGZIP(), []int{3}
}

func (x *PingResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *PingResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_protos_judge_proto protoreflect.FileDescriptor

var file_protos_judge_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x22, 0xcf, 0x03, 0x0a, 0x10, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x44, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x2f,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x4c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x70, 0x67, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x70, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x67, 0x70, 0x67, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x70, 0x67, 0x50, 0x61, 0x73, 0x73, 0x70,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x0a, 0x22, 0xad, 0x01, 0x0a, 0x11,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x09, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x52, 0x09, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2c, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0c, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x2a, 0x44, 0x0a, 0x0d, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x4c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x2a, 0x29, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47,
	0x5a, 0x49, 0x50, 0x10, 0x01, 0x2a, 0xb3, 0x01, 0x0a, 0x09, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x43, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x50,
	0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x4d, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x57, 0x41, 0x10, 0x04, 0x12, 0x06, 0x0a,
	0x02, 0x52, 0x45, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x45, 0x10, 0x07, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x45, 0x10, 0x08, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x10, 0x0a, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x0c, 0x32, 0x80, 0x01, 0x0a, 0x10,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06,
	0x5a, 0x04, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_judge_proto_rawDescOnce sync.Once
	file_protos_judge_proto_rawDescData = file_protos_judge_proto_rawDesc
)

func file_protos_judge_proto_rawDescGZIP() []byte {
	file_protos_judge_proto_rawDescOnce.Do(func() {
		file_protos_judge_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_judge_proto_rawDescData)
	})
	return file_protos_judge_proto_rawDescData
}

var file_protos_judge_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protos_judge_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protos_judge_proto_goTypes = []interface{}{
	(JudgeLogLevel)(0),        // 0: rpc.JudgeLogLevel
	(CompressType)(0),         // 1: rpc.CompressType
	(JudgeFlag)(0),            // 2: rpc.JudgeFlag
	(*JudgementRequest)(nil),  // 3: rpc.JudgementRequest
	(*JudgementResponse)(nil), // 4: rpc.JudgementResponse
	(*PingRequest)(nil),       // 5: rpc.PingRequest
	(*PingResponse)(nil),      // 6: rpc.PingResponse
}
var file_protos_judge_proto_depIdxs = []int32{
	0, // 0: rpc.JudgementRequest.log_level:type_name -> rpc.JudgeLogLevel
	1, // 1: rpc.JudgementRequest.compress_type:type_name -> rpc.CompressType
	2, // 2: rpc.JudgementResponse.JudgeFlag:type_name -> rpc.JudgeFlag
	5, // 3: rpc.JudgementService.Ping:input_type -> rpc.PingRequest
	3, // 4: rpc.JudgementService.StartJudgement:input_type -> rpc.JudgementRequest
	6, // 5: rpc.JudgementService.Ping:output_type -> rpc.PingResponse
	4, // 6: rpc.JudgementService.StartJudgement:output_type -> rpc.JudgementResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_protos_judge_proto_init() }
func file_protos_judge_proto_init() {
	if File_protos_judge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_judge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_judge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_judge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_judge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_judge_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_judge_proto_goTypes,
		DependencyIndexes: file_protos_judge_proto_depIdxs,
		EnumInfos:         file_protos_judge_proto_enumTypes,
		MessageInfos:      file_protos_judge_proto_msgTypes,
	}.Build()
	File_protos_judge_proto = out.File
	file_protos_judge_proto_rawDesc = nil
	file_protos_judge_proto_goTypes = nil
	file_protos_judge_proto_depIdxs = nil
}
